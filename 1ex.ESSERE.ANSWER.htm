<HTML><HEAD><META "Produced using Hot Potatoes by Half-Baked Software, registered to Fabio Girelli-Carasi.">
<TITLE>

</TITLE>
<SCRIPT LANGUAGE="JavaScript">

var Feedback = '';
var Correct = 'Esatto!';
var Incorrect = ''; 
var GiveHint = 'Una lettera in regalo!';
var CaseSensitive = 'False';
var YourScoreIs = 'Risposte esatte:';
var platform = 'win';

var CurrentWord = 0;

var WinLowerString='abcdefghijklmnopqrstuvwxyz%9A%9C%E0%E1%E2%E3%E4%E5%E6%E7%E8%E9%EA%EB%EC%ED%EE%EF%F0%F1%F2%F3%F4%F5%F6%F8%F9%FA%FB%FC%FD%FE%FF';
var WinUpperString='ABCDEFGHIJKLMNOPQRSTUVWXYZ%8A%8C%C0%C1%C2%C3%C4%C5%C6%C7%C8%C9%CA%CB%CC%CD%CE%CF%D0%D1%D2%D3%D4%D5%D6%D8%D9%DA%DB%DC%DD%DE%9F';

var MacLowerString='abcdefghijklmnopqrstuvwxyz%8A%8C%8D%8E%96%9A%9F%BE%BF%88%8B%9B%CF%D8%89%90%87%91%8F%92%94%95%93%97%98%9C%9E%9D';
var MacUpperString='ABCDEFGHIJKLMNOPQRSTUVWXYZ%80%81%82%83%84%85%86%AE%AF%CB%CC%CD%CE%D9%E5%E6%E7%E8%E9%EA%EB%EC%ED%EE%F1%F2%F3%F4';

var LowerString = '';
var UpperString = '';

MacAnswers = new Array();
WinAnswers = new Array();
AnswerList = new Array();

var IsWrong = 0;

function StartUp(){

MacAnswers[1] = 'sono';
MacAnswers[2] = 'sono';
MacAnswers[3] = 'sono';
MacAnswers[4] = 'sono';
MacAnswers[5] = 'siete';
MacAnswers[6] = 'siete';
MacAnswers[7] = 'siete';
MacAnswers[8] = 'siete';
MacAnswers[9] = 'siamo';
MacAnswers[10] = 'siamo';
MacAnswers[11] = 'siamo';
MacAnswers[12] = 'siamo';
MacAnswers[13] = 'e\'';
MacAnswers[14] = 'e\'';
MacAnswers[15] = 'e\'';
MacAnswers[16] = 'e\'';
MacAnswers[17] = 'sei';
MacAnswers[18] = 'sei';
MacAnswers[19] = 'sei';
MacAnswers[20] = 'sei';
MacAnswers[21] = 'sono';
MacAnswers[22] = 'sono';
MacAnswers[23] = 'sono';
MacAnswers[24] = 'sono';
MacAnswers[25] = 'sono';
MacAnswers[26] = 'sono';
MacAnswers[27] = 'sono';
MacAnswers[28] = 'sono';


WinAnswers[1] = 'sono';
WinAnswers[2] = 'sono';
WinAnswers[3] = 'sono';
WinAnswers[4] = 'sono';
WinAnswers[5] = 'siete';
WinAnswers[6] = 'siete';
WinAnswers[7] = 'siete';
WinAnswers[8] = 'siete';
WinAnswers[9] = 'siamo';
WinAnswers[10] = 'siamo';
WinAnswers[11] = 'siamo';
WinAnswers[12] = 'siamo';
WinAnswers[13] = 'e\'';
WinAnswers[14] = 'e\'';
WinAnswers[15] = 'e\'';
WinAnswers[16] = 'e\'';
WinAnswers[17] = 'sei';
WinAnswers[18] = 'sei';
WinAnswers[19] = 'sei';
WinAnswers[20] = 'sei';
WinAnswers[21] = 'sono';
WinAnswers[22] = 'sono';
WinAnswers[23] = 'sono';
WinAnswers[24] = 'sono';
WinAnswers[25] = 'sono';
WinAnswers[26] = 'sono';
WinAnswers[27] = 'sono';
WinAnswers[28] = 'sono';


	platform = 'win';
	if (navigator.appVersion.indexOf('Mac') != -1) {
		platform = 'mac';
	}

	if (platform == 'win'){
		for (i = 1; i < WinAnswers.length; i++){
			AnswerList[i] = unescape(WinAnswers[i]);
		LowerString = unescape(WinLowerString);
		UpperString = unescape(WinUpperString);
		}
	}
	else {
		for (i = 1; i < MacAnswers.length; i++){
			AnswerList[i] = unescape(MacAnswers[i]);
		LowerString = unescape(MacLowerString);
		UpperString = unescape(MacUpperString);
		}
	}
}

function ConvertCase(InString, Direction){

	var FromString = '';
	var ToString = '';

	if (Direction == 0){
		FromString = UpperString;
		ToString = LowerString;
	}
	else{
		FromString = LowerString;
		ToString = UpperString;
	}

	var i = 0;
	j = 0;
	var OutString = '';
	for (i=0; i<InString.length; i++){
		if (FromString.indexOf(InString.charAt(i)) > -1){
			j = FromString.indexOf(InString.charAt(i));			
			OutString += ToString.charAt(j);
		}
		else{	
			OutString += InString.charAt(i);
		}
	}
	return OutString;
}



function CheckAllAnswers(){
	var x = 0;
	var y = 0;
	var AnsNum = 0;
	var InString = '';
	IsWrong = 0;
	var Answers = new Array(4);
	var Tries = Math.floor((AnswerList.length) / 4);
	var NumberCorrect = 0;
	var Score = 0;

	for (x=0; x<(document.cloze.elements.length); x++){
		InString = TrimString(document.cloze.elements[x].value);
		AnsNum = (x*4) +1;
		Answers[1] = AnswerList[AnsNum];
		Answers[2] = AnswerList[AnsNum+1];
		Answers[3] = AnswerList[AnsNum+2];
		Answers[4] = AnswerList[AnsNum+3];

		if (CaseSensitive == 'False') {
			InString = ConvertCase(InString, 1);
			for (y=1; y<5; y++) {
				Answers[y] = ConvertCase(Answers[y], 1);
			}
		}

		if ((InString == Answers[1]) || (InString == Answers[2]) ||(InString == Answers[3]) || (InString == Answers[4])) {
			NumberCorrect++;
		}
		else {
			IsWrong = 1;
			document.cloze.elements[x].value = '';
		}
	}

	
	Score = Math.floor((NumberCorrect*100)/Tries);

	if (IsWrong == 1) {
		Feedback = Incorrect;
		Feedback+= '<BR>' + YourScoreIs + ' ' + Score + '%.';
	}

	else {
		Feedback = Correct;
		Feedback+= ' ' + YourScoreIs + ' ' + Score + '%.'+ '<BR>';
		
	}

	

	WriteFeedback(Feedback);
}

function TrimString(InString){

	var x = 0;

	if (InString.length != 0) {

		while ((escape(InString.charAt(InString.length - 1)) == '%20') || (escape(InString.charAt(InString.length - 1)) == '%0A') || (escape(InString.charAt(InString.length - 1)) == '%0D')){
			InString = InString.substring(0, InString.length - 1);
		}

		while ((escape(InString.charAt(0)) == '%20') || (escape(InString.charAt(0)) == '%0A') || (escape(InString.charAt(0)) == '%0D')){
			InString = InString.substring(1, InString.length);
		}

		while (InString.indexOf('  ') != -1) {
			x = InString.indexOf('  ');
			InString = InString.substring(0, x) + InString.substring(x+1, InString.length );
		}
		return InString;
	}
	else {
		return '';
	}
}

function WriteFeedback(Feedback) {
parent.frames[0].document.clear();
parent.frames[0].document.open();
parent.frames[0].document.writeln ("<html>");
parent.frames[0].document.writeln ("<body bgcolor=#FFFFFF text=#BA050A background=\"../../images/bg-realbricks.gif\">");
parent.frames[0].document.writeln ("<font size = +1><center><b>");
parent.frames[0].document.writeln (Feedback);
parent.frames[0].document.writeln ("</b></center></font></body></html>");
parent.frames[0].document.close();
}

function Cheat(){

	CurrentAnswers = new Array(4);
	CorrectBits = new Array(4);
	var CurrentAnswer = FindCurrent();

	if (CurrentAnswer == -1) {
		return;
	}

	CurrentAnswers[1] = AnswerList[(CurrentAnswer * 4) + 1];
	CurrentAnswers[2] = AnswerList[(CurrentAnswer * 4) + 2];
	CurrentAnswers[3] = AnswerList[(CurrentAnswer * 4) + 3];
	CurrentAnswers[4] = AnswerList[(CurrentAnswer * 4) + 4];

	CorrectBits[1] = CheckBeginning(document.cloze.elements[CurrentAnswer].value, CurrentAnswers[1]);
	CorrectBits[2] = CheckBeginning(document.cloze.elements[CurrentAnswer].value, CurrentAnswers[2]);
	CorrectBits[3] = CheckBeginning(document.cloze.elements[CurrentAnswer].value, CurrentAnswers[3]);
	CorrectBits[4] = CheckBeginning(document.cloze.elements[CurrentAnswer].value, CurrentAnswers[4]);

	Longest = FindLongest(CorrectBits[1], CorrectBits[2], CorrectBits[3], CorrectBits[4]);
		
	document.cloze.elements[CurrentAnswer].value = CorrectBits[Longest];
	WriteFeedback(GiveHint);
}

function TrackFocus(BoxNumber){
	CurrentWord = BoxNumber;
}


function CheckBeginning(Guess, Answer){
	var OutString = '';
	var i = 0;
	var UpperGuess = '';
	var UpperAnswer = '';

	if (CaseSensitive == 'False') {
		UpperGuess = ConvertCase(Guess, 1);
		UpperAnswer = ConvertCase(Answer, 1);
	}
	else {
		UpperGuess = Guess;
		UpperAnswer = Answer;
	}

	while (UpperGuess.charAt(i) == UpperAnswer.charAt(i)) {
		OutString += Guess.charAt(i);
		i++;
	}
	OutString += Answer.charAt(i);
	return OutString;
}


function CheckAnswer(Guess, AnsNum){

	if (CaseSensitive == 'True'){

		if ((Guess == AnswerList[(AnsNum * 4) + 1]) || (Guess == AnswerList[(AnsNum * 4) + 2]) || (Guess == AnswerList[(AnsNum * 4) + 3]) || (Guess == AnswerList[(AnsNum * 4) + 4])) {

			return true;
		}
		else {
			return false;
		}
	}

	else{
		Guess = ConvertCase(Guess, 1);
		if ((Guess == ConvertCase(AnswerList[(AnsNum * 4) + 1], 1)) || (Guess == ConvertCase(AnswerList[(AnsNum * 4) + 2], 1)) || (Guess == ConvertCase(AnswerList[(AnsNum * 4) + 3], 1)) || (Guess == ConvertCase(AnswerList[(AnsNum * 4) + 4], 1))) {

			return true;
		}
		else {
			return false;
		}

	}
}

function FindCurrent() {

	var FoundCurrent = -1;
	var x = 0;

	if (CheckAnswer(document.cloze.elements[CurrentWord].value, CurrentWord) == false) {
		FoundCurrent = CurrentWord;
	}	
	else {

		x=CurrentWord + 1;
		while ((FoundCurrent == -1) && (x<document.cloze.elements.length)){
			if (CheckAnswer(document.cloze.elements[x].value, x) == false) {
				FoundCurrent = x;
			}
			x++;	
		}
	}
	if (FoundCurrent == -1){
		x = 0;
		while ((FoundCurrent == -1) && (x<CurrentWord)){
			if (CheckAnswer(document.cloze.elements[x].value, x) == false) {

				FoundCurrent = x;
			}
			x++;
		}

	}
	return FoundCurrent;
}

function FindLongest(First, Second, Third, Fourth){
var Longest = 0;
var LongString = '';
	   Longest = 4;
	   LongString = Fourth;
	   if (Third.length >= LongString.length){
			 Longest = 3;
			 LongString = Third;
	   }
	   if (Second.length >= LongString.length){
			 Longest = 2;
			 LongString = Second;
	   }
	   if (First.length >= LongString.length){
			 Longest = 1;
			 LongString = First;
	   }
	   return Longest;
}


</SCRIPT></HEAD>
<BODY BGCOLOR="#FFFFFF" BACKGROUND="../../images/bg-realbricks.gif" onLoad="StartUp()">

<CENTER>

<h2></h2>
<b><i></i></b>

</CENTER><br>


<div align="left">
	<border="1" cellpadding="5" cellspacing="5" style="border-collapse: collapse" width="57%" bgcolor="#FFFFFF" id="table1">
		<tr>
			<td>David e Venere non SONO giovani.
			</td>
			<td><br>
	Voi SIETE a casa?
			</td>
		</tr>
		<tr>
			<td>&nbsp;
</div>
<div align="left">
	Noi SIAMO in ufficio.</td>
			<td>
</div>
<div align="left">
	Mia sorella E' simpatica.
			</td>
		</tr>
		<tr>
			<td>&nbsp;</div>
<div align="left">
	Tu SEI uno studente?&nbsp;
			</td>
			<td>&nbsp;
</div>
<div align="left">
	No, io SONO un insegnante.</td></div>
<div align="left">
		</tr>
		<tr>
			<td colspan="2">I miei fratelli SONO a Firenze.

			</td>
		</tr>
	</table>
</div>

</BLOCKQUOTE></FORM>
</BODY></HTML>

